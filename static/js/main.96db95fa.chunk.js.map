{"version":3,"sources":["Content/alert/_alert.jsx","Content/Dropdown/inputSelect.jsx","Content/Report/report.jsx","Content/Report/reportFile.jsx","Content/midle/_ordersBody.jsx","Content/header/header.jsx","Content/content.jsx","App.js","index.js"],"names":["Alert","showon","Text","tops","className","style","top","InputFromRequest","props","data","NewMasks","Function","prototype","mask","DelMask","useState","isOpenSelect","setIsOpenSelect","inputFormRequestRef","useRef","onBlur","map","item","onClick","id","tabIndex","ref","type","list","autoComplete","placeholder","name","onChange","e","target","value","indexOf","replace","onKeyDown","keyCode","index","data-index","Report","reportRef","document","documentElement","clientWidth","setWin_width","window","addEventListener","scope","datapaymentRecipient","date","price","description","deadlineDate","boxOffice","paymentStatus","itemExpenditure","ReportFile","action","cursor","marginLeft","marginBottom","border","Midle","toDay","Date","getDate","getMonth","getFullYear","AlertText","setAlertText","show_on","setShow_on","setTops","isLoadingReport","setIsLoadingReport","dateFromRef","dateByRef","paymentAmountRef","setMask","setDescription","paymentRecipient","setPaymentRecipient","dateFrom","setDateFrom","getTime","dateBy","setDateBy","paymentAmount","setPaymentAmount","IpCash","setIpCash","statusPay","setStatusPay","POST","setPOST","Win_width","useEffect","dats","POSTs","a","setTimeout","current","focus","masks","length","newMask","concat","filter","el","toLocaleLowerCase","newData","dates","itemDate","split","day","month","year","dateNew","payment","newPaymentAmount","desc","newDescription","paymentRecip","newPaymentRecipient","ipCashs","newIpCash","toLowerCase","statusPays","newStatusPay","NewItems","name_arr","items","active","DelItems","htmlFor","pattern","title","checked","Validation","Header","shutters","setShutters","pageYOffset","onscroll","console","log","href","src","alt","version","xmlns","xmlnsXlink","xmlnsa","x","y","width","height","viewBox","enableBackground","xmlSpace","d","Content","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96db95fa.chunk.js","sourcesContent":["import \"./_alert.scss\"\n\nexport default function Alert  ({showon, Text, tops}) {\n    return(\n        <div className=\"alert\">\n        { showon && \n            <div \n            style={{top: `${tops}`}}\n            className=\"alert-show\">{Text ? Text : \n            `Спасибо за ваш заказ! \\n Данные уже отправлены!`}</div> }\n        </div>\n    )\n}","import React, {useState, useRef} from 'react'\nimport \"./_selected.scss\"\n\n\nexport default function InputFromRequest( props ) {\n\n    const {data, NewMasks = Function.prototype, mask, DelMask= Function.prototype} = props;\n    const [ isOpenSelect, setIsOpenSelect ] = useState( false );\n    const inputFormRequestRef = useRef();\n\n    const KeyDown = (ev) => {\n    if(ev.keyCode === 13){\n        return ev.target.value\n    }\n}\n\n    return (\n        <>\n\n        <div\n            \n            className={isOpenSelect ? \" selectric-wrapper selectric-js-select-time selectric-belowselectric-open selectric-focus \" : \"selectric-wrapper selectric-js-select-time selectric-below\"} \n            onBlur={() => setIsOpenSelect( false )}\n            >\n            <div className=\"inputFormRequest--items\">\n                { mask && mask.map(item => \n                    <span key={item.id} className=\"inputFormRequest--item\">{item.data}&nbsp;<span onClick={()=> DelMask(item.id, \"inputFormRequest\")}>x</span></span>\n                )}\n             </div>\n            <div\n                className=\"inputFormRequest\">\n                \n                    <input\n                    tabIndex=\"-1\"\n                        key=\"input\"\n                        ref={inputFormRequestRef}\n                        type=\"text\"\n                        list=\"dish\"\n                        autoComplete=\"off\"\n                        className=\"input\"\n                        placeholder=\"Запрос... при нажатии ; или Entor\"\n                        name=\"inputFormRequest\"\n                        onChange={(e) => {if(e.target.value.indexOf(';') > 0) {NewMasks( e.target.value.replace(\";\", ''), e.target.name ); e.target.value = \"\"}}}\n                        onKeyDown={(e)=>{\n                            if(e.keyCode === 13){\n                                NewMasks(e.target.value, e.target.name)\n                                 e.target.value = \"\"\n                            }}}\n                    />\n                    <datalist id=\"dish\">\n                        {data.map( ( item, index ) => (\n                                <option\n                                    key={\"li\" + index}\n                                    data-index={index + 1}\n                                    // onClick={( e ) => {\n                                    //     NewMasks( item.data )\n                                    // }}\n                                >\n                                    {item.data+\";\"}\n                                </option>\n                            ) )}\n                    </datalist>\n            </div>\n        </div>\n        </>\n    )\n}","import \"./report.scss\"\nimport React, {useState, useRef, useEffect} from 'react'\n\n\nexport default function Report(props) {\n\n    const {data} = props\n    const reportRef = useRef()\n\n    const [ Win_width, setWin_width ] = useState( document.documentElement.clientWidth )\n    window.addEventListener( \"resize\", () => setWin_width( document.documentElement.clientWidth ) )\n\n\n    return (\n        <table className=\"report--table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Получатель платежа</th>\n                    <th scope=\"col\">Дата</th>\n                    <th scope=\"col\">Сумма</th>\n                    <th scope=\"col\">Описание</th>\n                    <th scope=\"col\">Крайняя дата</th>\n                    <th scope=\"col\">ИП/Касса</th>\n                    <th scope=\"col\">Статус платежа</th>\n                    <th scope=\"col\">Статья расходов</th>\n                </tr>\n            </thead>\n            <tbody\n            ref={reportRef}>\n                {\n                    data.map((item,index) => (\n                    <tr key={\"tr\"+index}>\n                    <th scope=\"row\">{index}</th>\n                    <td>{item.datapaymentRecipient}</td>\n                    <td>{item.date}</td>\n                    <td>{item.price}</td>\n                    <td>{item.description}</td>\n                    <td>{item.deadlineDate}</td>\n                    <td>{item.boxOffice}</td>\n                    <td>{item.paymentStatus}</td>\n                    <td>{item.itemExpenditure}</td>\n                    </tr>\n                    ))\n                }\n            </tbody>\n        </table>\n    )\n}","\n\n\nexport default function ReportFile() {\n\n    return (\n         <form action=''>\n            <input \n            style={{cursor: \"pointer\", marginLeft: \"2rem\", marginBottom: \"3rem\", border: \"2px solid #85c469\"}}\n                className=\"btn btn-secondary\"\n                type='submit' \n                value='Скачать таблицу'/>\n        </form>\n    )\n}","import React, {useState, useEffect, useRef} from 'react'\nimport \"./_ordersBody.scss\"\nimport Alert from \"../alert/_alert.jsx\"\nimport InputFromRequest from \"../Dropdown/inputSelect.jsx\"\nimport \"../_selectric.scss\"\nimport Report from \"../Report/report.jsx\"\nimport ReportFile from \"../Report/reportFile.jsx\"\n\nexport default function Midle() {\n    //----Константы\n    const toDay = new Date()\n    const days = toDay.getDate()\n    const months = toDay.getMonth() + 1\n    const years = toDay.getFullYear()\n    // ----------------------------------------------\n\n    //Переменные Алерт\n    const [ AlertText, setAlertText ] = useState( \"\" )\n    const [ show_on, setShow_on ] = useState( false )\n    const [ tops, setTops ] = useState( \"5rem\" )\n    // ----------------------------------------------\n\n    const [ isLoadSetting, setIsLoadSetting ] = useState()\n    const [ isLoadingReport, setIsLoadingReport ] = useState( false )\n\n    //Рефы\n    const dateFromRef = useRef()\n    const dateByRef = useRef()\n    const paymentAmountRef = useRef()\n    const reportRef = useRef()\n    // ----------------------------------------------\n\n    //Переменные вывода\n    //Маска расходов\n    const [ mask, setMask ] = useState( [] ) \n    // Маска по Описанию\n    const [ description, setDescription ] = useState( [] ) \n    // Маска получателя платежа\n    const [ paymentRecipient, setPaymentRecipient ] = useState( [] ) \n    // Маска дата С\n    const [ dateFrom, setDateFrom ] = useState( 0 )\n    // Маска дата ПО \n    const [ dateBy, setDateBy ] = useState( new Date( toDay.getFullYear(), toDay.getMonth(), toDay.getDate() ).getTime() )\n    // Маска Сумма платежа\n    const [ paymentAmount, setPaymentAmount ] = useState( [] )\n    // Маска ИП/Кассы \n    const [ IpCash, setIpCash ] = useState( [] )\n    // Маска Статусы платежа\n    const [ statusPay, setStatusPay ] = useState( [] )\n    // Пост к выгрузке (Таблица)\n    const [ POST, setPOST ] = useState( [] )\n    // ----------------------------------------------\n\n    //Расчет текущего разрешения экрана\n    const [ Win_width, setWin_width ] = useState( document.documentElement.clientWidth )\n    window.addEventListener( \"resize\", () => setWin_width( document.documentElement.clientWidth ) )\n    //При изменении экрана менять стиль\n    useEffect( () => {\n        if( Win_width <= 768 ) {\n            setTops( \"4.5rem\" )\n            if( Win_width <= 540 ) {\n                setTops( \"4rem\" )\n            }\n        } else {\n            setTops( \"5rem\" )\n        }\n    }, [ Win_width ] )\n    // ----------------------------------------------\n    const data = [\n        {id: 0, data: \"Привет\"},\n        {id: 1, data: \"Стас\"},\n        {id: 2, data: \"Анна\"},\n        {id: 3, data: \"Агротуризм / Прочее\"},\n        {id: 4, data: \"ИП Суравцов. Дезинсекция\"},\n        {id: 5, data: \"ИП Муравлев. Дезинсекция\"},\n        {id: 6, data: \"Мясной цех\"},\n        {id: 7, data: \"Общее\"},\n        {id: 8, data: \"Ресторан у Дона\"}\n        ,\n        {id: 9, data: \"Агротуризм / Прочее\"},\n        {id: 10, data: \"ИП Суравцов. Дезинсекция\"},\n        {id: 11, data: \"ИП Муравлев. Дезинсекция\"},\n        {id: 12, data: \"Мясной цех\"},\n        {id: 13, data: \"Общее\"},\n        {id: 14, data: \"Ресторан у Дона\"}\n        ,\n        {id: 15, data: \"Агротуризм / Прочее\"},\n        {id: 16, data: \"ИП Суравцов. Дезинсекция\"},\n        {id: 17, data: \"ИП Муравлев. Дезинсекция\"},\n        {id: 18, data: \"Мясной цех\"},\n        {id: 19, data: \"Общее\"},\n        {id: 20, data: \"Ресторан у Дона\"}\n    ]\n    const dats = [\n        {id: 1, datapaymentRecipient: \"ИП Акбиров. Поставщик бумажных ручек\", date: \"20.07.2021\", price: \"3500\", description: \"Ручка шариковая бумажная\", deadlineDate: \"21.07.2021\", paymentStatus: \"оплачен\", boxOffice: \"Касса\", itemExpenditure: \"Агротуризм / Прочее\"},\n        {id: 2, datapaymentRecipient: \"ИП Суравцов. Дезинсекция\", date: \"17.10.2020\", price: \"4200\", description: \"Ручка шариковая\", paymentStatus: \"отложен\", boxOffice: \"ИП\", itemExpenditure: \"Ресторан у Дона\"},\n        {id: 3, datapaymentRecipient: \"ИП Акбиров. Поставщик бумажных ручек\", date: \"20.07.2021\", price: \"3500\", description: \"Ручка шариковая бумажная\", deadlineDate: \"21.07.2021\", paymentStatus: \"отложен\", boxOffice: \"Касса\", itemExpenditure: \"Мясной цех\"},\n        {id: 4, datapaymentRecipient: \"ИП Суравцов. Дезинсекция\", date: \"17.10.2020\", price: \"4200\", description: \"Ручка шариковая\", paymentStatus: \"отменен\", boxOffice: \"ИП\", itemExpenditure: \"ИП Суравцов. Дезинсекция\"},\n        {id: 5, datapaymentRecipient: \"ИП Акбиров. Поставщик бумажных ручек\", date: \"20.07.2021\", price: \"3500\", description: \"Ручка шариковая бумажная\", deadlineDate: \"21.07.2021\", paymentStatus: \"оплачен\", boxOffice: \"Касса\", itemExpenditure: \"Стас\"},\n        {id: 6, datapaymentRecipient: \"ИП Суравцов. Дезинсекция\", date: \"17.10.2020\", price: \"4200\", description: \"Ручка шариковая\", paymentStatus: \"отменен\", boxOffice: \"ИП\", itemExpenditure: \"Бум бам\"},\n    ]\n    // Пост для вывода\n    const POSTs = ( data ) => {\n        setPOST( data )\n    }\n    //Фильтр по дате\n\n\n    async function Validation() {\n            if( dateFrom >= dateBy ) {\n                setAlertText( \"Не корректный ввод даты\" )\n                setShow_on( !show_on )\n                setTimeout( () => {setShow_on( false ); dateFromRef.current.focus()}, 1500 )\n            } else {\n                let newData = []\n                function masks () {\n                    if(mask.length > 0){\n                        let newMask = []\n                        mask.map(item => newMask = [].concat(dats.filter(el => el.itemExpenditure.toLocaleLowerCase().indexOf(item.data.toLocaleLowerCase()) >= 0), newMask ))\n                        newData = newMask;\n                    }else{\n                        newData = dats;\n                        return\n                    }\n                }\n                function dates (  ){\n                    newData = newData.filter( item => {\n                    const itemDate = item.date.split( \".\" )\n                    const day = itemDate[ 0 ]\n                    const month = itemDate[ 1 ] - 1\n                    const year = itemDate[ 2 ]\n                    const dateNew = new Date( year, month, day ).getTime()\n                    return dateNew < dateBy && dateNew >= dateFrom\n                     } )\n                }\n                function payment () {\n                    let newPaymentAmount = [];\n                    if(paymentAmount.length>0){\n                    paymentAmount.map(item => newPaymentAmount = [].concat(\n                        newData.filter(el => el.price === item.data)\n                    ,newPaymentAmount ))\n                    newData = newPaymentAmount;\n                    }else {\n                        return\n                    }\n                }\n                function desc () {\n                    let newDescription = [];\n                    if(description.length > 0){\n                    description.map(item => newData.map(el => el.description.indexOf(item.data) > 0 && (newDescription[newDescription.length+1] = {...el})))\n                    newData  = newDescription;\n                    } else {\n                        return\n                    }\n                }\n                function paymentRecip () {\n                    let newPaymentRecipient = []\n                    if(paymentRecipient.length > 0){\n                    paymentRecipient.map(item => newData.map(el => el.datapaymentRecipient.indexOf(item.data) > 0 && (newPaymentRecipient[newPaymentRecipient.length+1] = {...el})))\n                    newData  = newPaymentRecipient;\n                    }else {\n                        return\n                    }\n                }\n                function ipCashs () {\n                    let newIpCash = [];\n                    if(IpCash.length > 0){\n                        IpCash.map(item => newIpCash = [].concat(newData.filter(el => el.boxOffice.toLowerCase() === item.data.toLowerCase() ), newIpCash))\n                        newData  = newIpCash;\n                    }else {\n                        return\n                    }\n                }\n                function statusPays () {\n                    let newStatusPay = [];\n                    if(statusPay.length > 0){\n                        statusPay.map(item => newStatusPay = [].concat(newData.filter(el => el.paymentStatus.toLowerCase() === item.data.toLowerCase()), newStatusPay))\n                        newData  = newStatusPay;\n                    }else {\n                        return\n                    }\n                }\n                await masks();\n                await dates();\n                await payment();\n                await desc();\n                await paymentRecip();\n                await ipCashs();\n                await statusPays();\n                await POSTs( newData );\n                await setIsLoadingReport( true );\n                await reportRef.current.focus();\n            }\n\n\n    }\n\n    //Добавление нового элемента в Элементы фильтра\n    const NewItems = ( item, name_arr ) => {\n        let proverka = false;\n        if( name_arr === \"inputFormRequest\" ) {\n            proverka = mask.filter( items => items.data === item ).length >= 1\n            if( !proverka ) {\n                const newMask = {\n                    id: mask.length + 1,\n                    data: item\n                }\n                setMask( [ ...mask, newMask ] )\n            } else {\n                setAlertText( \"Данное значение уже внесено в фильтр\" )\n                setShow_on( !show_on )\n                setTimeout( () => {setShow_on( false )}, 1500 )\n            }\n        }\n        if( name_arr === \"description\" ) {\n            if( description.length > 0 ) {\n                proverka = description.filter( items => items.data === item ).length >= 1\n                if( !proverka ) {\n                    const newDescription = {\n                        id: description.length + 1,\n                        data: item,\n                        active: true\n                    }\n                    setDescription( [ ...description, newDescription ] )\n                } else {\n                    setAlertText( \"Данное значение уже внесено в фильтр\" )\n                    setShow_on( !show_on )\n                    setTimeout( () => {setShow_on( false )}, 1500 )\n                }\n            } else {\n\n                const newDescription = {\n                    id: description.length + 1,\n                    data: item,\n                    active: true\n                }\n                setDescription( [ newDescription ] )\n            }\n        }\n        if( name_arr === \"paymentRecipient\" ) {\n            proverka = paymentRecipient.filter( items => items.data === item ).length >= 1\n            if( paymentRecipient.length > 0 ) {\n                proverka = paymentRecipient.filter( items => items.data === item ).length >= 1\n                if( !proverka ) {\n                    const newPaymentRecipient = {\n                        id: paymentRecipient.length + 1,\n                        data: item,\n                        active: true\n                    }\n                    setPaymentRecipient( [ ...paymentRecipient, newPaymentRecipient ] )\n                } else {\n                    setAlertText( \"Данное значение уже внесено в фильтр\" )\n                    setShow_on( !show_on )\n                    setTimeout( () => {setShow_on( false )}, 1500 )\n                }\n            } else {\n                const newPaymentRecipient = {\n                    id: paymentRecipient.length + 1,\n                    data: item,\n                    active: true\n                }\n                setPaymentRecipient( [ newPaymentRecipient ] )\n            }\n        }\n        if( name_arr === \"paymentAmount\" ) {\n            proverka = paymentAmount.filter( items => items.data === item ).length >= 1\n            if( paymentAmount.length > 0 ) {\n                proverka = paymentAmount.filter( items => items.data === item ).length >= 1\n                if( !proverka ) {\n                    const newPaymentAmount = {\n                        id: paymentAmount.length + 1,\n                        data: item,\n                        active: true\n                    }\n                    setPaymentAmount( [ ...paymentAmount, newPaymentAmount ] )\n                } else {\n                    setAlertText( \"Данное значение уже внесено в фильтр\" )\n                    setShow_on( !show_on )\n                    setTimeout( () => {setShow_on( false )}, 1500 )\n                }\n            } else {\n                const newPaymentAmount = {\n                    id: paymentAmount.length + 1,\n                    data: item,\n                    active: true\n                }\n                setPaymentAmount( [ newPaymentAmount ] )\n            }\n        }\n    }\n\n\n    //Функции удаления элементов поиска\n    const DelItems = ( id, name_arr ) => {\n        if( name_arr === \"inputFormRequest\" ) {\n            const newMask = mask.filter( item => item.id !== id )\n            setMask( newMask )\n        }\n        if( name_arr === \"description\" ) {\n            const newDescription = description.filter( item => item.id !== id )\n            setDescription( newDescription )\n        }\n        if( name_arr === \"paymentRecipient\" ) {\n            const newPaymentRecipient = paymentRecipient.filter( item => item.id !== id )\n            setPaymentRecipient( newPaymentRecipient )\n        }\n        if( name_arr === \"paymentAmount\" ) {\n            const newPaymentAmount = paymentAmount.filter( item => item.id !== id )\n            setPaymentAmount( newPaymentAmount )\n        }\n        \n    }\n\n    return (\n        <>\n            <Alert\n                tops={tops}\n                Text={AlertText}\n                showon={show_on}\n            />\n            <div className=\"costItem_content\">\n\n                <div\n                    className=\"label--left\">\n                    Форма поиска\n                </div>\n                <div style={{marginBottom: \"5vw\"}}>\n                    <div className=\"label--sm\">\n                        Отчет статей расходов по выбранным параметрам.\n                    </div>\n                    <InputFromRequest\n                        DelMask={DelItems}\n                        mask={mask}\n                        key=\"1\"\n                        data={data}\n                        NewMasks={NewItems}\n                    />\n                </div>\n                <div className=\"label--left label--left--load\">\n                    Дополнительные параметры\n                    <div\n                        className={\"item--add--open item--add\"}>\n                        &#8249;\n                    </div>\n                </div>\n                <div>\n                    <div\n                        className=\"settings\">\n                        <div className=\"settings--inputElement\">\n                            <label className=\"label\" htmlFor=\"dateFrom\">\n                                Введите начальную дату платежа\n                            </label>\n                            <input\n                                ref={dateFromRef}\n                                type=\"date\"\n                                className=\"input\"\n                                placeholder=\"С\"\n                                pattern=\"\"\n                                name=\"dateFrom\"\n                                id=\"dateFrom\"\n                                onChange={() => setDateFrom( new Date( dateFromRef.current.value ).getTime() )}\n                                onBlur={() => setDateFrom( new Date( dateFromRef.current.value ).getTime() )}\n                            />\n                        </div>\n                        <div className=\"settings--inputElement\">\n                            <label className=\"label\" htmlFor=\"dateBy\">\n                                Введите конечную дату платежа\n                            </label>\n                            <input\n                                ref={dateByRef}\n                                type=\"date\"\n                                className=\"input\"\n                                placeholder=\"По\"\n                                name=\"dateBy\"\n                                id=\"dateBy\"\n                                onChange={() => setDateBy( new Date( dateByRef.current.value ).getTime() )}\n                                onBlur={() => setDateBy( new Date( dateByRef.current.value ).getTime() )}\n                            />\n                        </div>\n                        <div className=\"settings--inputElement\">\n                            <label className=\"label\" htmlFor=\"paymentAmount\">\n                                Введите сумму платежа\n                            </label>\n                            <div className=\"inputFormRequest--items\">\n                                {paymentAmount && paymentAmount.map( item =>\n                                    <span key={item.id} className=\"inputFormRequest--item\">{item.data}&nbsp;<span onClick={() => DelItems( item.id, \"paymentAmount\" )}>x</span></span>\n                                )}\n                            </div>\n                            <input\n                                ref={paymentAmountRef}\n                                type=\"number\"\n                                className=\"input\"\n                                placeholder=\"Сумма\"\n                                title=\"Стоимость\"\n                                name=\"paymentAmount\"\n                                id=\"paymentAmount\"\n                                onChange={( e ) => {if( e.target.value.indexOf( ';' ) > 0 ) {NewItems( e.target.value.replace( \";\", '' ), e.target.name ); e.target.value = \"\"} }}\n                                onKeyDown={( e ) => {\n                                    if( e.keyCode === 13 ) {\n                                        NewItems( e.target.value, e.target.name )\n                                        e.target.value = \"\"\n                                    }\n                                }}\n                            />\n                        </div>\n                        <div className=\"settings--inputElement\">\n                            <label className=\"label\" htmlFor=\"keywords\">\n                                Введите ключевые слова, которые присутствуют в описании\n                            </label>\n                            <div className=\"inputFormRequest--items\">\n                                {description && description.map( item =>\n                                    <span key={item.id} className=\"inputFormRequest--item\">{item.data}&nbsp;<span onClick={() => DelItems( item.id, \"description\" )}>x</span></span>\n                                )}\n                            </div>\n                            <input\n                                type=\"text\"\n                                className=\"input\"\n                                placeholder=\"Ввод через ' ; '\"\n                                title=\"Ключевые слова, вводить через запятую ,\"\n                                name=\"description\"\n                                id=\"description\"\n                                onChange={( e ) => {if( e.target.value.indexOf( ';' ) > 0 ) {NewItems( e.target.value.replace( \";\", '' ), e.target.name ); e.target.value = \"\"} }}\n                                onKeyDown={( e ) => {\n                                    if( e.keyCode === 13 ) {\n                                        NewItems( e.target.value, e.target.name )\n                                        e.target.value = \"\"\n                                    }\n                                }}\n                            />\n                        </div>\n                        <div className=\"checkbox\">\n                            <label className=\"label\">Выберите тип платежа</label>\n                            <input \n                            type=\"checkbox\" \n                            name=\"checkUser\" \n                            id=\"check1\" \n                            onChange={(e)=>{\n                                if(e.target.checked === true){\n                                    setIpCash([...IpCash,{id: IpCash.length+1, data: \"ИП\"}])\n                                } else {\n                                    setIpCash(IpCash.filter(item => item.data !== \"ИП\"))\n                                }\n                            }}\n                            />\n                            <label htmlFor=\"check1\">ИП</label>\n                            <input \n                            type=\"checkbox\" \n                            name=\"checkUser\" \n                            id=\"check2\" \n                            onChange={(e)=>{\n                                if(e.target.checked === true){\n                                    setIpCash([...IpCash,{id: IpCash.length+1, data: \"Касса\"}])\n                                } else {\n                                    setIpCash(IpCash.filter(item => item.data !== \"Касса\"))\n                                }\n                            }}\n                            />\n                            <label htmlFor=\"check2\">Касса</label>\n                        </div>\n                        <div className=\"checkbox\">\n                            <label className=\"label\">Выберите статус платежа</label>\n                            <input \n                            type=\"checkbox\" \n                            name=\"checkUser\" \n                            id=\"check3\" \n                            onChange={(e)=>{\n                                if(e.target.checked === true){\n                                    setStatusPay([...statusPay,{id: IpCash.length+1, data: \"Оплачен\"}])\n                                } else {\n                                  setStatusPay(statusPay.filter(item => item.data !== \"Оплачен\"))\n                                }\n                            }}\n                            />\n                            <label htmlFor=\"check3\">Оплачен</label>\n                            <input \n                            type=\"checkbox\" \n                            name=\"checkUser\" \n                            id=\"check4\" \n                            onChange={(e)=>{\n                                if(e.target.checked === true){\n                                    setStatusPay([...statusPay,{id: IpCash.length+1, data: \"Отложен\"}])\n                                } else {\n                                    setStatusPay(statusPay.filter(item => item.data !== \"Отложен\"))\n                                }\n                            }}\n                            />\n                            <label htmlFor=\"check4\">Отложен</label>\n                            <input \n                            type=\"checkbox\" \n                            name=\"checkUser\" \n                            id=\"check5\" \n                            onChange={(e)=>{\n                                if(e.target.checked === true){\n                                    setStatusPay([...statusPay,{id: IpCash.length+1, data: \"Отменен\"}])\n                                } else {\n                                    setStatusPay(statusPay.filter(item => item.data !== \"Отменен\"))\n                                }\n                            }}\n                            />\n                            <label htmlFor=\"check5\">Отменен</label>\n                        </div>\n                        <div className=\"settings--inputElement\">\n                            <label className=\"label\" htmlFor=\"keywords1\">\n                                Введите ключевые слова, которые присутствуют в маске получателя платежа\n                            </label>\n                            <div className=\"inputFormRequest--items\">\n                                {paymentRecipient && paymentRecipient.map( item =>\n                                    <span key={item.id} className=\"inputFormRequest--item\">{item.data}&nbsp;<span onClick={() => DelItems( item.id, \"paymentRecipient\" )}>x</span></span>\n                                )}\n                            </div>\n                            <input\n                                type=\"text\"\n                                className=\"input\"\n                                placeholder=\"Ввод через запятую ' ; '\"\n                                title=\"Ключевые слова, вводить через запятую ,\"\n                                name=\"paymentRecipient\"\n                                id=\"paymentRecipient\"\n                                onChange={( e ) => {if( e.target.value.indexOf( ';' ) > 0 ) {NewItems( e.target.value.replace( \";\", '' ), e.target.name ); e.target.value = \"\"} }}\n                                onKeyDown={( e ) => {\n                                    if( e.keyCode === 13 ) {\n                                        NewItems( e.target.value, e.target.name )\n                                        e.target.value = \"\"\n                                    }\n                                }}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"label--left\">\n                </div>\n                <div>\n                    <div>\n                        <button\n                            onClick={() => {Validation()}}\n                            style={{marginBottom: \"1rem\"}}\n                            className=\"btn btn-primary\">\n                            <span>Сформировать таблицу</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                ref={reportRef}>\n                {Win_width > 540 ? isLoadingReport && <Report\n                    key=\"repo\"\n                    data={POST} />\n                    : <ReportFile key=\"repoFile\" />\n                }\n            </div>\n        </>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport \"./_header.scss\"\n\nexport default function Header() {\n\n    const [ Win_width, setWin_width ] = useState( document.documentElement.clientWidth )\n    const [ shutters, setShutters ] = useState( \"\" )\n    window.addEventListener( \"resize\", () => setWin_width( document.documentElement.clientWidth ) )\n    useEffect( () => {\n            setShutters( \"\" )\n            if( window.pageYOffset >= 16 ) {\n                setShutters( \"header--shut\" )\n            } else setShutters( \"\" )\n            window.onscroll = () => {\n                if( window.pageYOffset >= 16 ) {\n                    setShutters( \"header--shut\" )\n                } else setShutters( \"\" )\n            }\n    }, [ Win_width ] )\n\n    return (\n        <>\n            <div onClick={() => console.log( Win_width )} className={shutters ? ( shutters + \" header\" ) : \" header\"}>\n                <div className=\"header--inner\">\n                    <a href=\"https://lukino.ru/\">\n                        <img\n                            className=\"header--img\"\n                            src=\"logowhite.png\"\n                            alt=\"a\" />\n                    </a>\n                </div>\n\n            </div>\n            <div className=\"header--nav\">\n                <div className=\"header--breadcrumbs\">\n                    <ul className=\"breadcrumbs\">\n                        <li className=\"breadcrumbs__item\">\n                            <a href=\"https://lukino.ru/\" title=\"Главная\">\n                                <svg version=\"1.1\"\n                                xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlnsa=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                                x=\"0px\" y=\"0px\" width=\"1rem\" height=\"0.8rem\" viewBox=\"0 0 228.6 187.5\" \n                                style={{enableBackground: \"new 0 0 228.6 187.5\"}}\n                                xmlSpace=\"preserve\">\n                            <defs>\n                            </defs>\n                            <path d=\"M174.7,163.5h-26v-62.1H79.9v62.1h-26V77.4l60.4-47l60.4,47V163.5z M103.9,125.5h20.8v34.4h-20.8V125.5z M228.6,89L114.3,0\n                                L65.8,37.8v-20h-24v38.7L0,89l14.7,18.9l15.2-11.8v91.4h168.8V96.1l15.2,11.8L228.6,89z\"/>\n                            </svg>\n                            </a>\n                        </li>\n                        <li className=\"breadcrumbs__item\">\n                            <a href=\"!#\">\n                                Бюджет компании\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"label\">\n                    Бюджет компании\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react'\nimport Midle from \"./midle/_ordersBody\"\nimport Header from \"./header/header.jsx\"\nimport \"./_context.scss\"\nimport \"./_inputs.scss\"\nimport \"./_selectric.scss\"\nimport \"./_buttons.scss\"\nimport \"./_breadcrambs.scss\"\n\n\nexport default function Content () {\n\n    \n\n\n    return(\n        <>\n        <Header />\n        <Midle />\n        </>\n    )\n}","import './App.css'\nimport React from 'react'\nimport Content from \"./Content/content\"\n\nfunction App() {\n  \n  return (\n      <Content />\n  )\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}