{"version":3,"sources":["Content/alert/_alert.jsx","Content/Dropdown/inputSelect.jsx","Content/Report/report.jsx","Content/Report/reportFile.jsx","Content/midle/_ordersBody.jsx","Content/header/header.jsx","Content/content.jsx","App.js","index.js"],"names":["Alert","showon","Text","tops","className","style","top","InputFromRequest","props","data","NewMasks","Function","prototype","mask","DelMask","useState","isOpenSelect","setIsOpenSelect","inputFormRequestRef","useRef","onBlur","map","item","onClick","id","tabIndex","ref","type","list","autoComplete","placeholder","name","onChange","e","target","value","indexOf","replace","index","data-index","Report","reportRef","document","documentElement","clientWidth","setWin_width","window","addEventListener","scope","datapaymentRecipient","date","price","description","deadlineDate","boxOffice","itemExpenditure","ReportFile","action","cursor","marginLeft","marginBottom","border","Midle","toDay","Date","getDate","getMonth","getFullYear","AlertText","show_on","setTops","dateFromRef","dateByRef","paymentAmountRef","setMask","setDateFrom","setDateBy","setPaymentAmount","POST","setPOST","Win_width","useEffect","dats","paymentStatus","newMask","filter","length","active","console","log","htmlFor","pattern","current","title","Header","shutters","setShutters","pageYOffset","onscroll","href","src","alt","version","xmlns","xmlnsXlink","xmlnsa","x","y","width","height","viewBox","enableBackground","xmlSpace","d","Content","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.786f6e67.chunk.js","sourcesContent":["import \"./_alert.scss\"\n\nexport default function Alert  ({showon, Text, tops}) {\n    return(\n        <div className=\"alert\">\n        { showon && \n            <div \n            style={{top: `${tops}`}}\n            className=\"alert-show\">{Text ? Text : \n            `Спасибо за ваш заказ! \\n Данные уже отправлены!`}</div> }\n        </div>\n    )\n}","import React, {useState, useRef} from 'react'\nimport \"./_selected.scss\"\n\n\nexport default function InputFromRequest( props ) {\n\n    const {data, NewMasks = Function.prototype, mask, DelMask= Function.prototype} = props;\n    const [ isOpenSelect, setIsOpenSelect ] = useState( false );\n    const inputFormRequestRef = useRef();\n\n    return (\n        <>\n\n        <div\n            \n            className={isOpenSelect ? \" selectric-wrapper selectric-js-select-time selectric-belowselectric-open selectric-focus \" : \"selectric-wrapper selectric-js-select-time selectric-below\"} \n            onBlur={() => setIsOpenSelect( false )}\n            >\n            <div className=\"inputFormRequest--items\">\n                { mask && mask.map(item => \n                    <span key=\"item.id\" className=\"inputFormRequest--item\">{item.data}&nbsp;<span onClick={()=> DelMask(item.id)}>x</span></span>\n                )}\n             </div>\n            <div\n                className=\"inputFormRequest\">\n                \n                    <input\n                    tabIndex=\"-1\"\n                        key=\"input\"\n                        ref={inputFormRequestRef}\n                        type=\"text\"\n                        list=\"dish\"\n                        autoComplete=\"off\"\n                        className=\"input\"\n                        placeholder=\"Запрос...\"\n                        name=\"inputFormRequest\"\n                        onChange={(e) => {if(e.target.value.indexOf(';') > 0) {NewMasks( e.target.value.replace(\";\", '') ); e.target.value = \"\"}}}\n                    />\n                    <datalist id=\"dish\">\n                        {data.map( ( item, index ) => (\n                                <option\n                                    key={\"li\" + index}\n                                    data-index={index + 1}\n                                    // onClick={( e ) => {\n                                    //     NewMasks( item.data )\n                                    // }}\n                                >\n                                    {item.data+\";\"}\n                                </option>\n                            ) )}\n                    </datalist>\n            </div>\n        </div>\n        </>\n    )\n}","import \"./report.scss\"\nimport React, {useState, useRef, useEffect} from 'react'\n\n\nexport default function Report(props) {\n\n    const {data} = props\n    const reportRef = useRef()\n\n    const [ Win_width, setWin_width ] = useState( document.documentElement.clientWidth )\n    window.addEventListener( \"resize\", () => setWin_width( document.documentElement.clientWidth ) )\n\n\n    return (\n        <table className=\"report--table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Получатель платежа</th>\n                    <th scope=\"col\">Дата</th>\n                    <th scope=\"col\">Сумма</th>\n                    <th scope=\"col\">Описание</th>\n                    <th scope=\"col\">Крайняя дата</th>\n                    <th scope=\"col\">ИП/Касса</th>\n                    <th scope=\"col\">Статус платежа</th>\n                    <th scope=\"col\">Статья расходов</th>\n                </tr>\n            </thead>\n            <tbody\n            ref={reportRef}>\n                {\n                    data.map((item,index) => (\n                    <tr key={\"tr\"+index}>\n                    <th scope=\"row\">{item.id}</th>\n                    <td>{item.datapaymentRecipient}</td>\n                    <td>{item.date}</td>\n                    <td>{item.price}</td>\n                    <td>{item.description}</td>\n                    <td>{item.deadlineDate}</td>\n                    <td>{item.boxOffice}</td>\n                    <td>{item.deadlineDate}</td>\n                    <td>{item.itemExpenditure}</td>\n                    </tr>\n                    ))\n                }\n            </tbody>\n        </table>\n    )\n}","\n\n\nexport default function ReportFile() {\n\n    return (\n         <form action=''>\n            <input \n            style={{cursor: \"pointer\", marginLeft: \"2rem\", marginBottom: \"3rem\", border: \"2px solid #85c469\"}}\n                className=\"btn btn-secondary\"\n                type='submit' \n                value='Скачать таблицу'/>\n        </form>\n    )\n}","import React, {useState, useEffect, useRef} from 'react'\nimport \"./_ordersBody.scss\"\nimport Alert from \"../alert/_alert.jsx\"\nimport InputFromRequest from \"../Dropdown/inputSelect.jsx\"\nimport \"../_selectric.scss\"\nimport Report from \"../Report/report.jsx\"\nimport ReportFile from \"../Report/reportFile.jsx\"\n\nexport default function Midle() {\n    //----Константы\n    const toDay = new Date()\n    const days = toDay.getDate()\n    const months = toDay.getMonth() + 1\n    const years = toDay.getFullYear()\n    // ----------------------------------------------\n\n    //Переменные Алерт\n    const [ AlertText, setAlertText ] = useState( \"\" )\n    const [ show_on, setShow_on ] = useState( false )\n    const [ tops, setTops ] = useState( \"5rem\" )\n    // ----------------------------------------------\n\n    const [ isLoadSetting, setIsLoadSetting ] = useState()\n\n    //Рефы\n    const dateFromRef = useRef()\n    const dateByRef = useRef()\n    const paymentAmountRef = useRef()\n    const reportRef = useRef()\n    // ----------------------------------------------\n\n    //Переменные вывода\n    const [ mask, setMask ] = useState( [] )\n    const [ maskString, setMaskString ] = useState( \"\" )\n    const [ dateFrom, setDateFrom ] = useState( \"\" )\n    const [ dateBy, setDateBy ] = useState( \"\" )\n    const [ paymentAmount, setPaymentAmount ] = useState( \"\" )\n    const [ POST, setPOST ] = useState( [] )\n    // ----------------------------------------------\n\n    //Расчет текущего разрешения экрана\n    const [ Win_width, setWin_width ] = useState( document.documentElement.clientWidth )\n    window.addEventListener( \"resize\", () => setWin_width( document.documentElement.clientWidth ) )\n    //При изменении экрана менять стиль\n    useEffect( () => {\n        if( Win_width <= 768 ) {\n            setTops( \"4.5rem\" )\n            if( Win_width <= 540 ) {\n                setTops( \"4rem\" )\n            }\n        } else {\n            setTops( \"5rem\" )\n        }\n    }, [ Win_width ] )\n    // ----------------------------------------------\n    const data = [\n        {id: 0, data: \"Привет\"},\n        {id: 1, data: \"Стас\"},\n        {id: 2, data: \"Анна\"},\n        {id: 3, data: \"Агротуризм / Прочее\"},\n        {id: 4, data: \"ИП Суравцов. Дезинсекция\"},\n        {id: 5, data: \"ИП Муравлев. Дезинсекция\"},\n        {id: 6, data: \"Мясной цех\"},\n        {id: 7, data: \"Общее\"},\n        {id: 8, data: \"Ресторан у Дона\"}\n    ]\n    const dats = [\n        {id: 1, datapaymentRecipient: \"ИП Акбиров. Поставщик бумажных ручек\", date: \"20.07.2021\", price: \"3500\", description: \"Ручка шариковая бумажная\", deadlineDate: \"21.07.2021\", paymentStatus: \"оплачен\", boxOffice: \"Касса\", itemExpenditure: \"Агротуризм / Прочее\"},\n        {id: 2, datapaymentRecipient: \"ИП Суравцов. Дезинсекция\", date: \"17.10.2020\", price: \"4200\", description: \"Ручка шариковая\", paymentStatus: \"отменен\", boxOffice: \"ИП\"},\n        {id: 3, datapaymentRecipient: \"ИП Акбиров. Поставщик бумажных ручек\", date: \"20.07.2021\", price: \"3500\", description: \"Ручка шариковая бумажная\", deadlineDate: \"21.07.2021\", paymentStatus: \"оплачен\", boxOffice: \"Касса\", itemExpenditure: \"Агротуризм / Прочее\"},\n        {id: 4, datapaymentRecipient: \"ИП Суравцов. Дезинсекция\", date: \"17.10.2020\", price: \"4200\", description: \"Ручка шариковая\", paymentStatus: \"отменен\", boxOffice: \"ИП\"},\n        {id: 5, datapaymentRecipient: \"ИП Акбиров. Поставщик бумажных ручек\", date: \"20.07.2021\", price: \"3500\", description: \"Ручка шариковая бумажная\", deadlineDate: \"21.07.2021\", paymentStatus: \"оплачен\", boxOffice: \"Касса\", itemExpenditure: \"Агротуризм / Прочее\"},\n        {id: 6, datapaymentRecipient: \"ИП Суравцов. Дезинсекция\", date: \"17.10.2020\", price: \"4200\", description: \"Ручка шариковая\", paymentStatus: \"отменен\", boxOffice: \"ИП\"},\n    ]\n\n    const POSTs = () =>{\n        setPOST(dats)\n    }\n\n    const NewMasks = (item) => {\n        // const newItem = maskString.replace( /\\./g, ', ' ).replace( /\\//g, ', ' ).split( ', ' )\n       const newMask = {\n           id: mask.length + 1,\n           data: item,\n           active: false\n       }\n        setMask( [ ...mask, newMask ] )\n        console.log( mask )\n    }\n\n    const DelMask = (id) =>{\n\n       const newMask = mask.filter(item=> item.id !== id);\n\n       setMask(newMask)\n\n    }\n\n\n    return (\n        <>\n            <Alert\n                tops={tops}\n                Text={AlertText}\n                showon={show_on}\n            />\n            <div className=\"costItem_content\">\n\n                <div\n                    className=\"label--left\">\n                    Форма поиска\n                </div>\n                <div style={{marginBottom: \"5vw\"}}>\n                    <div className=\"label--sm\">\n                        Отчет статей расходов по выбранным параметрам.\n                    </div>\n                    <InputFromRequest\n                        DelMask={DelMask}\n                        mask={mask}\n                        key=\"1\"\n                        data={data}\n                        NewMasks={NewMasks}\n                    />\n                </div>\n                <div className=\"label--left label--left--load\">\n                    Дополнительные параметры\n                    <div\n                        className={\"item--add--open item--add\"}>\n                        &#8249;\n                    </div>\n                </div>\n                <div>\n                        <div\n                            className=\"settings\">\n                            <div className=\"settings--inputElement\">\n                                <label className=\"label\" htmlFor=\"dateFrom\">\n                                    Введите начальную дату платежа\n                                </label>\n                                <input\n                                    ref={dateFromRef}\n                                    type=\"date\"\n                                    className=\"input\"\n                                    placeholder=\"С\"\n                                    pattern=\"\"\n                                    name=\"dateFrom\"\n                                    id=\"dateFrom\"\n                                    onChange={() => setDateFrom( dateFromRef.current.value )}\n                                />\n                            </div>\n                            <div className=\"settings--inputElement\">\n                                <label className=\"label\" htmlFor=\"dateBy\">\n                                    Введите конечную дату платежа\n                                </label>\n                                <input\n                                    ref={dateByRef}\n                                    type=\"date\"\n                                    className=\"input\"\n                                    placeholder=\"По\"\n                                    name=\"dateBy\"\n                                    id=\"dateBy\"\n                                    onChange={() => setDateBy( dateByRef.current.value )}\n                                />\n                            </div>\n                            <div className=\"settings--inputElement\">\n                                <label className=\"label\" htmlFor=\"paymentAmount\">\n                                    Введите сумму платежа\n                                </label>\n                                <input\n                                    ref={paymentAmountRef}\n                                    type=\"number\"\n                                    className=\"input\"\n                                    placeholder=\"Сумма\"\n                                    title=\"Стоимость\"\n                                    name=\"paymentAmount\"\n                                    id=\"paymentAmount\"\n                                    onChange={() => setPaymentAmount( paymentAmountRef.current.value )}\n                                />\n                            </div>\n                            <div className=\"settings--inputElement\">\n                                <label className=\"label\" htmlFor=\"keywords\">\n                                    Введите ключевые слова, которые присутствуют в описании\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"input\"\n                                    placeholder=\"Ввод через запятую ' , '\"\n                                    title=\"Ключевые слова, вводить через запятую ,\"\n                                    name=\"keywords\"\n                                    id=\"keywords\"\n                                />\n                            </div>\n                            <div className=\"checkbox\">\n                                <label className=\"label\">Выберите тип платежа</label>\n                                <input type=\"checkbox\" name=\"checkUser\" id=\"check1\" />\n                                <label htmlFor=\"check1\">ИП</label>\n                                <input type=\"checkbox\" name=\"checkUser\" id=\"check2\" />\n                                <label htmlFor=\"check2\">Касса</label>\n                            </div>\n                            <div className=\"checkbox\">\n                                <label className=\"label\">Выберите статус платежа</label>\n                                <input type=\"checkbox\" name=\"checkUser\" id=\"check3\" />\n                                <label htmlFor=\"check3\">Оплачен</label>\n                                <input type=\"checkbox\" name=\"checkUser\" id=\"check4\" />\n                                <label htmlFor=\"check4\">Отложен</label>\n                                <input type=\"checkbox\" name=\"checkUser\" id=\"check5\" />\n                                <label htmlFor=\"check5\">Отменен</label>\n                            </div>\n                            <div className=\"settings--inputElement\">\n                                <label className=\"label\" htmlFor=\"keywords1\">\n                                    Введите ключевые слова, которые присутствуют в маске получателя платежа\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"input\"\n                                    placeholder=\"Ввод через запятую ' , '\"\n                                    title=\"Ключевые слова, вводить через запятую ,\"\n                                    name=\"keywords1\"\n                                    id=\"keywords1\"\n                                />\n                            </div>\n                        </div>\n                    \n                </div>\n                <div className=\"label--left\">\n                </div>\n                <div>\n                    <div>\n                        <button\n                            onClick={()=>{POSTs()}}\n                            style={{marginBottom: \"1rem\"}}\n                            className=\"btn btn-primary\">\n                            <span>Сформировать таблицу</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n           {Win_width > 540 ? <Report \n            key=\"repo\"\n            data={POST}/>\n        :  <ReportFile key=\"repoFile\"/>\n        }   \n        </>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport \"./_header.scss\"\n\nexport default function Header() {\n\n    const [ Win_width, setWin_width ] = useState( document.documentElement.clientWidth )\n    const [ shutters, setShutters ] = useState( \"\" )\n    window.addEventListener( \"resize\", () => setWin_width( document.documentElement.clientWidth ) )\n    useEffect( () => {\n            setShutters( \"\" )\n            if( window.pageYOffset >= 16 ) {\n                setShutters( \"header--shut\" )\n            } else setShutters( \"\" )\n            window.onscroll = () => {\n                if( window.pageYOffset >= 16 ) {\n                    setShutters( \"header--shut\" )\n                } else setShutters( \"\" )\n            }\n    }, [ Win_width ] )\n\n    return (\n        <>\n            <div onClick={() => console.log( Win_width )} className={shutters ? ( shutters + \" header\" ) : \" header\"}>\n                <div className=\"header--inner\">\n                    <a href=\"https://lukino.ru/\">\n                        <img\n                            className=\"header--img\"\n                            src=\"logowhite.png\"\n                            alt=\"a\" />\n                    </a>\n                </div>\n\n            </div>\n            <div className=\"header--nav\">\n                <div className=\"header--breadcrumbs\">\n                    <ul className=\"breadcrumbs\">\n                        <li className=\"breadcrumbs__item\">\n                            <a href=\"https://lukino.ru/\" title=\"Главная\">\n                                <svg version=\"1.1\"\n                                xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlnsa=\"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/\"\n                                x=\"0px\" y=\"0px\" width=\"1rem\" height=\"0.8rem\" viewBox=\"0 0 228.6 187.5\" \n                                style={{enableBackground: \"new 0 0 228.6 187.5\"}}\n                                xmlSpace=\"preserve\">\n                            <defs>\n                            </defs>\n                            <path d=\"M174.7,163.5h-26v-62.1H79.9v62.1h-26V77.4l60.4-47l60.4,47V163.5z M103.9,125.5h20.8v34.4h-20.8V125.5z M228.6,89L114.3,0\n                                L65.8,37.8v-20h-24v38.7L0,89l14.7,18.9l15.2-11.8v91.4h168.8V96.1l15.2,11.8L228.6,89z\"/>\n                            </svg>\n                            </a>\n                        </li>\n                        <li className=\"breadcrumbs__item\">\n                            <a href=\"!#\">\n                                Бюджет компании\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"label\">\n                    Бюджет компании\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react'\nimport Midle from \"./midle/_ordersBody\"\nimport Header from \"./header/header.jsx\"\nimport \"./_context.scss\"\nimport \"./_inputs.scss\"\nimport \"./_selectric.scss\"\nimport \"./_buttons.scss\"\nimport \"./_breadcrambs.scss\"\n\n\nexport default function Content () {\n\n    \n\n\n    return(\n        <>\n        <Header />\n        <Midle />\n        </>\n    )\n}","import './App.css'\nimport React from 'react'\nimport Content from \"./Content/content\"\n\nfunction App() {\n  \n  return (\n      <Content />\n  )\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}